// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// conggm
Rcpp::List conggm(arma::mat S, arma::umat graph, int N, double tol, int maxit, bool traceOut);
RcppExport SEXP _mixggm_conggm(SEXP SSEXP, SEXP graphSEXP, SEXP NSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP traceOutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< bool >::type traceOut(traceOutSEXP);
    rcpp_result_gen = Rcpp::wrap(conggm(S, graph, N, tol, maxit, traceOut));
    return rcpp_result_gen;
END_RCPP
}
// estepmggm
Rcpp::List estepmggm(arma::mat x, arma::mat mu, arma::cube sigma, arma::vec pro);
RcppExport SEXP _mixggm_estepmggm(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP proSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pro(proSEXP);
    rcpp_result_gen = Rcpp::wrap(estepmggm(x, mu, sigma, pro));
    return rcpp_result_gen;
END_RCPP
}
// icf
Rcpp::List icf(arma::mat Sigma, arma::mat S, arma::umat graph, double N, double tol, int maxit, bool traceOut, bool regularize, double psi);
RcppExport SEXP _mixggm_icf(SEXP SigmaSEXP, SEXP SSEXP, SEXP graphSEXP, SEXP NSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP traceOutSEXP, SEXP regularizeSEXP, SEXP psiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< bool >::type traceOut(traceOutSEXP);
    Rcpp::traits::input_parameter< bool >::type regularize(regularizeSEXP);
    Rcpp::traits::input_parameter< double >::type psi(psiSEXP);
    rcpp_result_gen = Rcpp::wrap(icf(Sigma, S, graph, N, tol, maxit, traceOut, regularize, psi));
    return rcpp_result_gen;
END_RCPP
}
// profileloglik
Rcpp::List profileloglik(arma::mat Sigma, arma::mat S, int N);
RcppExport SEXP _mixggm_profileloglik(SEXP SigmaSEXP, SEXP SSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(profileloglik(Sigma, S, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mixggm_conggm", (DL_FUNC) &_mixggm_conggm, 6},
    {"_mixggm_estepmggm", (DL_FUNC) &_mixggm_estepmggm, 4},
    {"_mixggm_icf", (DL_FUNC) &_mixggm_icf, 9},
    {"_mixggm_profileloglik", (DL_FUNC) &_mixggm_profileloglik, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mixggm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
